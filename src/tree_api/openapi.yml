openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'tree API'
  description: 'OpenAPI specifications for a simple API that exposes a tree data-structure'
paths:
  /:
    parameters:
        - $ref: '#/components/parameters/treeQuery'

    get:
      operationId: get_home
      description: "Home entrypoint with information about the tree API"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Tree'
                  - $ref: '#/components/schemas/RelatedResources'
              example:
                name: "Model Domain"
                root: "7865b1fa-e680-11e9-ba43-ac9e17b76a71"
                preferences:
                  maxItemsPerPage: 20
                hrefs:
                  - rel: self
                    href: "https://virtserver.swaggerhub.com/pcrespov/tree/1.0.0/"
                  - ref: root
                    href: "https://virtserver.swaggerhub.com/pcrespov/tree/1.0.0/nodes/7865b1fa-e680-11e9-ba43-ac9e17b76a71"
                  - rel: nodes
                    href: "https://virtserver.swaggerhub.com/pcrespov/tree/1.0.0/nodes"


  /nodes:
    parameters:
      - $ref: '#/components/parameters/treeQuery'

    get:
      operationId: get_nodes
      description: "Returns UUIDs for all the nodes in a tree (other than the root group)."
      parameters:
        - $ref: '#/components/parameters/pageLimitQuery'
        - $ref: '#/components/parameters/pageMarkerQuery'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: "Flat list of nodes in tree"
                    properties:
                      nodesCount:
                        type: integer
                        minimum: 0
                      nodes:
                        description: list of nodes in tree limited by page options
                        type: array
                        items:
                          type: string
                          format: uuid
                  - $ref: '#/components/schemas/RelatedResources'
              example:
                description: "Calls /nodes?limit=3&marker=d29dced4-4399-4bdc-951d-d474a48db477"
                nodesCount: 7462
                nodes:
                  - "d29dced4-4399-4bdc-951d-d474a48db477"
                  - "5e92f325-2085-45ab-9c21-8a9019a2290d"
                  - "17895910-9d97-45d0-aeeb-0faaff44080e"
                href:
                  - self: "self"
                    href: "https://virtserver.swaggerhub.com/pcrespov/tree/1.0.0/nodes/e7c5e7f0-a1e3-4d2a-b958-494c33923fa0"
                  - self: "root"
                    href: "https://virtserver.swaggerhub.com/pcrespov/tree/1.0.0/nodes/7865b1fa-e680-11e9-ba43-ac9e17b76a71"

  /nodes/{node_id}:
    parameters:
      - $ref: '#/components/parameters/nodeId'
      - $ref: '#/components/parameters/treeQuery'

    get:
      operationId: get_node
      description: "Returns information about the node with the UUID given in the URI"
      parameters:
        - $ref: '#/components/parameters/pageLimitQuery'
        - $ref: '#/components/parameters/pageMarkerQuery'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Node'
                  - $ref: '#/components/schemas/NodeAttributes'
                  - $ref: '#/components/schemas/ChildrenArray'
                  - $ref: '#/components/schemas/RelatedResources'

  /nodes/{node_id}/attributes:
    parameters:
      - $ref: '#/components/parameters/nodeId'
      - $ref: '#/components/parameters/treeQuery'

    get:
      operationId: get_node_attributes
      description: "Extra detail on metadata of node"
      responses:
        '200':
          description: "returns all detailed metadata"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NodeAttributes'

  /nodes/{node_id}/data:
    parameters:
      - $ref: '#/components/parameters/nodeId'
      - $ref: '#/components/parameters/treeQuery'

    get:
      operationId: get_node_data
      description: "Data represented by the node"
      responses:
        '200':
          description: "returns data"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/NodeData'

components:
  schemas:

    Tree:
      type: object
      properties:
        name:
          type: string
          description: "Name of the tree (defaults to root's name)"
        root:
          type: string
          description: "The UUID of the root node of this tree"
        preferences:
          type: object
          description: "tree API preferences"
          properties:
            maxItemsPerPage:
              type: integer
              minimum: 1
              default: 20

    Node:
      type: object
      nullable: true
      required:
        - id
        - tag
      properties:
        # TODO: these are attributes
        id:
          description: "UUID of requested node"
          type: string
          format: uuid
          readOnly: true
        tag:
          description: "User name of the node"
          type: string
        # this is derived info
        childrenCount:
          description: "Number of children"
          type: integer
          minimum: 0
          readOnly: true
        depth:
          description: "Gets level of depth of a given node"
          type: integer
          minimum: 1
          readOnly: true
        # this is extra
        href:
          description: "self node reference"
          type: string
          readOnly: true

    NodeAttributes:
      type: object
      description: "Generic attributes a tree node. "
      properties:
        expanded:
          type: boolean
          description: "If false, all node children are hidden"
          default: true
        checked:
          type: boolean
          default: false
        locked:
          description: "This node is set as read-only."
          type: boolean
          default: false

    ChildrenArray:
      type: object
      properties:
        children:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Node'
              - $ref: '#/components/schemas/NodeAttributes'

    NodeData:
      type: object
      description: "Data associated to this node. Has a free from JSON defined by NodeSchema??"
      nullable: true
      additionalProperties: true

    RelatedResources:
      type: object
      properties:
        hrefs:
          description: "List to related resources"
          type: array
          items:
            type: object
            properties:
              rel:
                description: type of relation
                type: string
                enum: [attributes, data, node, parent, root, self]
              href:
                description: link
                type: string

  parameters:

    treeQuery:
      in: query
      description: "specifies tree in host"
      name: host
      schema:
        type: string
        #TODO: format ?host=tall.public.data.hdfnode.org

    nodeId:
      in: path
      name: node_id
      description: "UUID of the node"
      required: true
      schema:
        type: string
        format: uuid

    pageLimitQuery:
      in: query
      name: limit
      description: "If provided, a positive integer value specifying the maximum number of UUID’s to return"
      schema:
        type: integer
        minimum: 0

    pageMarkerQuery:
      in: query
      name: marker
      description: "If provided, a string value indicating that only UUID’s that occur after the marker value will be returned."
      schema:
        type: string
        format: uuid


# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/pcrespov/tree/1.0.0